{"version":3,"sources":["main/pages/components/Header/index.jsx","main/constants/labels.js","main/pages/components/RewardsCard/index.jsx","main/pages/components/RewardsModal/index.jsx","main/services/api/RewardsService.js","main/services/utils/api.js","main/pages/Rewards/index.jsx","main/App.jsx","reportWebVitals.js","index.jsx"],"names":["Header","props","title","className","labels","REWARDS_TITLE","DETAILS","RewardsCard","rewards","onClick","image_url","heading","body","Container","fluid","Row","Col","sm","md","Image","src","alt","dangerouslySetInnerHTML","__html","Button","block","RewardsModal","onClose","Modal","show","onHide","centered","dialogClassName","closeButton","Title","Body","RewardsService","getRewards","api","get","headers","Headers","Accept","_checkStatus","res","ok","API","url","options","fetch","then","json","Promise","resolve","catch","err","_fetch","method","generateOption","Rewards","useState","rewardsList","setRewardsList","activeRewards","setActiveRewards","useEffect","data","console","error","rewardsEl","forEach","reward","index","push","renderRewards","undefined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e570bcb7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst Header = (props) => {\n    const { title } = props;\n\n    return (\n        <div className='Header'>\n            <h1>{title}</h1>\n        </div>\n    );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n};\n","const labels = {\n    REWARDS_TITLE: 'MY REWARDS & OFFERS',\n    DETAILS: 'VIEW DETAILS'\n};\n\nexport default labels;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\n\nimport './styles.scss';\nimport { labels } from 'main/constants';\n\nconst RewardsCard = ({ rewards, onClick }) => {\n    const { image_url, heading, body } = rewards;\n\n    return (\n        <div className='RewardsCard'>\n            <Container fluid>\n                <Row>\n                    <Col sm={12} md={3}>\n                        <Image src={image_url} alt={image_url} className='logo' />\n                    </Col>\n                    <Col>\n                        <div>{heading}</div>\n                        <span className='details' dangerouslySetInnerHTML={{ __html: body }}></span>\n                        <Button block className='view-button' onClick={() => onClick(rewards)}>\n                            {labels.DETAILS}\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default RewardsCard;\n\nRewardsCard.propTypes = {\n    reward: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'react-bootstrap';\n\nimport './styles.scss';\n\nconst RewardsModal = ({ rewards, onClose }) => {\n    return (\n        <>\n            {rewards && (\n                <Modal\n                    show={rewards}\n                    onHide={() => onClose()}\n                    centered\n                    dialogClassName='RewardsModal'>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{rewards.heading}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body></Modal.Body>\n                </Modal>\n            )}\n        </>\n    );\n};\n\nexport default RewardsModal;\n\nRewardsModal.propTypes = {\n    rewards: PropTypes.object,\n    onClose: PropTypes.func\n};\n","import { api } from '..';\n\nconst getRewards = () => {\n    return api.get('rewards.json');\n};\n\nconst RewardsService = {\n    getRewards\n};\n\nexport default RewardsService;\n","import 'whatwg-fetch';\n\nconst headers = new Headers({\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n});\n\nconst generateOption = (method, headers, body) => {\n    return {\n        method,\n        headers,\n        body\n    };\n};\n\nconst _checkStatus = (res) => {\n    if (res.ok) {\n        return res;\n    } else {\n        throw res;\n    }\n};\n\nconst _fetch = (url, options) => {\n    return fetch(url, options)\n        .then(_checkStatus)\n        .then((res) => res.json())\n        .then((res) => Promise.resolve(res))\n        .catch((err) => Promise.resolve(err));\n};\n\nconst get = (url) => {\n    const options = generateOption('GET', headers);\n\n    return _fetch(url, options);\n};\n\nconst API = {\n    get\n};\n\nexport default API;\n","import React, { useState, useEffect } from 'react';\nimport './styles.scss';\n\nimport Header from './../components/Header';\nimport RewardsCard from './../components/RewardsCard';\nimport RewardsModal from './../components/RewardsModal';\nimport { labels } from '../../constants';\nimport { RewardsService } from './../../services';\n\nconst Rewards = () => {\n    const [rewardsList, setRewardsList] = useState([]);\n    const [activeRewards, setActiveRewards] = useState();\n\n    useEffect(() => {\n        RewardsService.getRewards()\n            .then((res) => {\n                setRewardsList(res.data);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, []);\n\n    const renderRewards = () => {\n        let rewardsEl = [];\n\n        rewardsList.forEach((reward, index) => {\n            rewardsEl.push(<RewardsCard key={index} rewards={reward} onClick={setActiveRewards} />);\n        });\n\n        return rewardsEl;\n    };\n\n    return (\n        <div className='Rewards'>\n            <Header title={labels.REWARDS_TITLE} />\n            <div className='content'>{renderRewards()}</div>\n            <RewardsModal rewards={activeRewards} onClose={() => setActiveRewards(undefined)} />\n        </div>\n    );\n};\n\nexport default Rewards;\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/custom-bootstrap.scss';\n\nimport Rewards from './pages/Rewards';\n\nconst App = () => {\n    return (\n        <div className='App'>\n            <Rewards />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}