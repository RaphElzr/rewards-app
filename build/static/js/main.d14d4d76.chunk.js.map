{"version":3,"sources":["main/pages/components/Header/index.jsx","main/constants/config.js","main/constants/labels.js","main/constants/regexp.js","main/services/api/RewardsService.js","main/services/utils/api.js","main/services/utils/common.js","main/pages/components/RewardsCard/index.jsx","main/pages/components/RewardsModal/index.jsx","main/pages/components/SearchInput/index.jsx","main/pages/Rewards/index.jsx","main/App.jsx","reportWebVitals.js","index.jsx"],"names":["Header","props","title","className","config","DATE_FORMAT","EXPIRY_LIMIT","BODY_LIMIT","labels","REWARDS_TITLE","DETAILS","EXPIRES_IN","EXPIRES_ON","DAYS","SEARCH","SEARCH_REWARDS","regexp","SPACE","TAGS","ASCII","RewardsService","getRewards","api","get","headers","Headers","Accept","_checkStatus","res","ok","API","url","options","fetch","then","json","Promise","resolve","catch","err","_fetch","method","body","generateOption","common","parseDateString","dateString","moment","format","parseHtml","htmlString","replace","match","capture","charCode","String","fromCharCode","daysDiff","date","diff","RewardsCard","rewards","onClick","image_url","heading","rewardsEl","useRef","useEffect","innerText","current","length","substring","renderExpiryNotice","renderExpiry","Container","fluid","Row","Col","xs","sm","Image","src","alt","usage_end_date","ref","dangerouslySetInnerHTML","__html","Button","block","RewardsModal","onClose","Modal","show","onHide","centered","dialogClassName","closeButton","Title","Body","SearchInput","placeholder","onSearch","searchEl","InputGroup","FormControl","onKeyPress","event","key","value","Append","Rewards","useState","rewardsList","setRewardsList","search","setSearch","activeRewards","setActiveRewards","data","newRewardsList","searchList","split","forEach","item","hasMatch","toLowerCase","includes","push","console","error","reward","index","renderRewards","undefined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iVAceA,EAVA,SAACC,GAAW,IACfC,EAAUD,EAAVC,MAER,OACI,qBAAKC,UAAU,SAAf,SACI,oBAAIA,UAAU,4CAAd,SAA2DD,O,wCCHxDE,G,MANA,CACXC,YAAa,aACbC,aAAc,GACdC,WAAY,MCODC,EAVA,CACXC,cAAe,sBACfC,QAAS,eACTC,WAAY,aACZC,WAAY,aACZC,KAAM,OACNC,OAAQ,SACRC,eAAgB,kBCDLC,EANA,CACXC,MAAO,OACPC,KAAM,WACNC,MAAO,eCOIC,EAJQ,CACnBC,WALe,WACf,OAAOC,EAAIC,IAAI,kBCDbC,G,MAAU,IAAIC,QAAQ,CACxBC,OAAQ,mBACR,eAAgB,sBAWdC,EAAe,SAACC,GAClB,GAAIA,EAAIC,GACJ,OAAOD,EAEP,MAAMA,GAsBCE,EAJH,CACRP,IAPQ,SAACQ,GAGT,OAXW,SAACA,EAAKC,GACjB,OAAOC,MAAMF,EAAKC,GACbE,KAAKP,GACLO,MAAK,SAACN,GAAD,OAASA,EAAIO,UAClBD,MAAK,SAACN,GAAD,OAASQ,QAAQC,QAAQT,MAC9BU,OAAM,SAACC,GAAD,OAASH,QAAQC,QAAQE,MAM7BC,CAAOT,EA3BK,SAACU,EAAQjB,EAASkB,GACrC,MAAO,CACHD,SACAjB,UACAkB,QAqBYC,CAAe,MAAOnB,M,iBCD3BoB,EANA,CACXC,gBAtBoB,SAACC,GACrB,OAAOA,EAAaC,IAAOD,GAAYE,OAAO5C,EAAOC,aAAe,IAsBpE4C,UAnBc,SAACC,GAGf,OAAIA,EACSA,EAAWC,QAAQnC,EAAOE,KAAM,IACzBiC,QAAQnC,EAAOG,OAAO,SAACiC,EAAOC,EAASC,GAAjB,OAA8BC,OAAOC,aAAaF,MAIjF,IAWXG,SAPa,SAACX,GAAiC,IAArBY,EAAoB,uDAAbX,MACjC,OAAOD,EAAaC,IAAOD,GAAYa,KAAKD,EAAM,QAAU,ICyCjDE,EAvDK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACpBC,EAA6BF,EAA7BE,UAAWC,EAAkBH,EAAlBG,QAAStB,EAASmB,EAATnB,KACtBuB,EAAYC,iBAAO,MAEzBC,qBAAU,WACN,IAAIC,EAAYH,EAAUI,QAAQD,UAE9BA,EAAUE,OAASlE,EAAOG,aAC1B0D,EAAUI,QAAQD,UAAYA,EAAUG,UAAU,EAAGnE,EAAOG,YAAc,UAIlF,IAAMiE,EAAqB,SAAC1B,GACxB,IAAIW,EAAWb,EAAOa,SAASX,GAE/B,GAAIW,GAAY,GAAKA,GAAYrD,EAAOE,aACpC,OACI,8BAAK,4BAAIE,EAAOG,WAAa,IAAM8C,EAAW,IAAMjD,EAAOK,UAKjE4D,EAAe,SAAC3B,GAClB,OACI,qCACK0B,EAAmB1B,GACpB,+BAAOtC,EAAOI,WAAa,IAAMgC,EAAOC,gBAAgBC,SAKpE,OACI,cAAC4B,EAAA,EAAD,CAAWC,OAAK,EAACxE,UAAU,cAA3B,SACI,eAACyE,EAAA,EAAD,CAAKzE,UAAU,WAAf,UACI,cAAC0E,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG5E,UAAU,oBAA9B,SACI,cAAC6E,EAAA,EAAD,CAAOC,IAAKlB,EAAWmB,IAAKnB,EAAW5D,UAAU,WAErD,eAAC0E,EAAA,EAAD,CAAK1E,UAAU,YAAf,UACI,6BAAK6D,IACL,qBAAK7D,UAAU,aAAf,SACKsE,EAAaZ,EAAQsB,kBAE1B,mBAAGhF,UAAU,UAAUiF,IAAKnB,EAAWoB,wBAAyB,CAAEC,OAAQ5C,KAC1E,qBAAKvC,UAAU,oBAAf,SACKsE,EAAaZ,EAAQsB,kBAE1B,cAACI,EAAA,EAAD,CAAQC,OAAK,EAACrF,UAAU,cAAc2D,QAAS,kBAAMA,EAAQD,IAA7D,SACKrD,EAAOE,mB,QCXjB+E,G,MApCM,SAAC,GAA0B,IAAxB5B,EAAuB,EAAvBA,QAAS6B,EAAc,EAAdA,QAY7B,OACI,mCACK7B,GACG,eAAC8B,EAAA,EAAD,CACIC,OAAM/B,EACNgC,OAAQ,kBAAMH,KACdI,UAAQ,EACRC,gBAAgB,eAJpB,UAKI,cAACJ,EAAA,EAAM3F,OAAP,CAAcgG,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,UAAcpC,EAAQG,YAE1B,eAAC2B,EAAA,EAAMO,KAAP,WACI,cAAClB,EAAA,EAAD,CAAOC,IAAKpB,EAAQE,UAAWmB,IAAKrB,EAAQE,UAAW5D,UAAU,SACjE,oBAAIA,UAAU,2BAAd,SAA0C0D,EAAQG,UAvB3C,SAAClB,GACxB,IAAIW,EAAWb,EAAOa,SAASX,GAE/B,GAAIW,GAAY,GAAKA,GAAYrD,EAAOE,aACpC,OACI,4BAAG,4BAAIE,EAAOG,WAAa,IAAM8C,EAAW,IAAMjD,EAAOK,SAmBhD2D,CAAmBX,EAAQsB,gBAC5B,4BAAI3E,EAAOI,WAAa,IAAMgC,EAAOC,gBAAgBgB,EAAQsB,kBAC7D,mBAAGE,wBAAyB,CAAEC,OAAQzB,EAAQnB,kB,wBCJvDyD,G,MAxBK,SAAClG,GAAW,IAAD,EACuBA,EAA1CmG,mBADmB,MACL5F,EAAOM,OADF,EACUuF,EAAapG,EAAboG,SAC/BC,EAAWpC,iBAAO,MAExB,OACI,eAACqC,EAAA,EAAD,CAAYpG,UAAU,cAAtB,UACI,cAACqG,EAAA,EAAD,CACIpB,IAAKkB,EACLF,YAAaA,EACbK,WAAY,SAAAC,GACU,UAAdA,EAAMC,KACNN,EAASC,EAASjC,QAAQuC,UAItC,cAACL,EAAA,EAAWM,OAAZ,UACI,cAACtB,EAAA,EAAD,CAAQzB,QAAS,kBAAMuC,EAASC,EAASjC,QAAQuC,QAAjD,SACI,cAAC,IAAD,aC+CLE,EA9DC,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACXC,EADW,KACEC,EADF,OAEUF,mBAAS,IAFnB,mBAEXG,EAFW,KAEHC,EAFG,OAGwBJ,qBAHxB,mBAGXK,EAHW,KAGIC,EAHJ,KAKlBlD,qBAAU,WACN/C,EAAeC,aACda,MAAK,SAACN,GAAS,IACJ0F,EAAS1F,EAAT0F,KAER,GAAIJ,EAAO5C,OAAS,EAAG,CACnB,IAAIiD,EAAiB,GACjBC,EAAaN,EAAOO,MAAMzG,EAAOC,OAErCqG,EAAKI,SAAQ,SAACC,GACV,IAAIC,GAAW,EAEfJ,EAAWE,SAAQ,SAACR,GAChBA,EAASA,EAAOW,cAEhBD,EAAWA,IACPhF,EAAOK,UAAU0E,EAAK3D,SAAS6D,cAAcC,SAASZ,IACtDtE,EAAOK,UAAU0E,EAAKjF,MAAMmF,cAAcC,SAASZ,OAIvDU,GAAUL,EAAeQ,KAAKJ,MAGtCV,EAAeM,QAEfN,EAAeK,MAGpBhF,OAAM,SAACC,GACNyF,QAAQC,MAAM1F,QAGnB,CAAC2E,IAYJ,OACI,sBAAK/G,UAAU,UAAf,UACI,cAAC,EAAD,CAAQD,MAAOM,EAAOC,gBACtB,sBAAKN,UAAU,UAAf,UACI,cAAC,EAAD,CAAaiG,YAAa5F,EAAOO,eAAgBsF,SAAUc,IAdjD,WAClB,IAAIlD,EAAY,GAMhB,OAJA+C,EAAYU,SAAQ,SAACQ,EAAQC,GACzBlE,EAAU8D,KAAK,cAAC,EAAD,CAAyBlE,QAASqE,EAAQpE,QAASuD,GAAjCc,OAG9BlE,EAQEmE,MAEL,cAAC,EAAD,CAAcvE,QAASuD,EAAe1B,QAAS,kBAAM2B,OAAiBgB,UCpDnEC,EARH,WACR,OACI,qBAAKnI,UAAU,MAAf,SACI,cAAC,EAAD,OCEGoI,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBvG,MAAK,YAAkD,IAA/CwG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFpBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.d14d4d76.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.scss';\r\n\r\nconst Header = (props) => {\r\n    const { title } = props;\r\n\r\n    return (\r\n        <div className='Header'>\r\n            <h1 className='font-weight-bold text-center text-primary'>{title}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n","const config = {\n    DATE_FORMAT: 'DD/MM/YYYY',\n    EXPIRY_LIMIT: 10,\n    BODY_LIMIT: 200\n};\n\nexport default config;\n","const labels = {\r\n    REWARDS_TITLE: 'MY REWARDS & OFFERS',\r\n    DETAILS: 'VIEW DETAILS',\r\n    EXPIRES_IN: 'EXPIRES IN',\r\n    EXPIRES_ON: 'EXPIRES ON',\r\n    DAYS: 'DAYS',\r\n    SEARCH: 'Search',\r\n    SEARCH_REWARDS: 'Search Rewards'\r\n};\r\n\r\nexport default labels;\r\n","const regexp = {\n    SPACE: /\\s+/g,\n    TAGS: /<[^>]*>/g,\n    ASCII: /(&#(\\d+);)/g\n};\n\nexport default regexp;\n","import { api } from '..';\r\n\r\nconst getRewards = () => {\r\n    return api.get('rewards.json');\r\n};\r\n\r\nconst RewardsService = {\r\n    getRewards\r\n};\r\n\r\nexport default RewardsService;\r\n","import 'whatwg-fetch';\r\n\r\nconst headers = new Headers({\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json'\r\n});\r\n\r\nconst generateOption = (method, headers, body) => {\r\n    return {\r\n        method,\r\n        headers,\r\n        body\r\n    };\r\n};\r\n\r\nconst _checkStatus = (res) => {\r\n    if (res.ok) {\r\n        return res;\r\n    } else {\r\n        throw res;\r\n    }\r\n};\r\n\r\nconst _fetch = (url, options) => {\r\n    return fetch(url, options)\r\n        .then(_checkStatus)\r\n        .then((res) => res.json())\r\n        .then((res) => Promise.resolve(res))\r\n        .catch((err) => Promise.resolve(err));\r\n};\r\n\r\nconst get = (url) => {\r\n    const options = generateOption('GET', headers);\r\n\r\n    return _fetch(url, options);\r\n};\r\n\r\nconst API = {\r\n    get\r\n};\r\n\r\nexport default API;\r\n","import moment from 'moment';\r\n\r\nimport { config, regexp } from 'main/constants';\r\n\r\nconst parseDateString = (dateString) => {\r\n    return dateString ? moment(dateString).format(config.DATE_FORMAT) : '';\r\n};\r\n\r\nconst parseHtml = (htmlString) => {\r\n    let string = '';\r\n\r\n    if (htmlString) {\r\n        string = htmlString.replace(regexp.TAGS, '');\r\n        string = string.replace(regexp.ASCII, (match, capture, charCode) => String.fromCharCode(charCode));\r\n\r\n        return string;\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nconst daysDiff = (dateString, date = moment()) => {\r\n    return dateString ? moment(dateString).diff(date, 'days') : 0;\r\n};\r\n\r\nconst common = {\r\n    parseDateString,\r\n    parseHtml,\r\n    daysDiff\r\n}\r\n\r\nexport default common;","import React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\r\n\r\nimport './styles.scss';\r\nimport { labels, config } from 'main/constants';\r\nimport { common } from 'main/services';\r\n\r\nconst RewardsCard = ({ rewards, onClick }) => {\r\n    const { image_url, heading, body } = rewards;\r\n    const rewardsEl = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let innerText = rewardsEl.current.innerText;\r\n\r\n        if (innerText.length > config.BODY_LIMIT) {\r\n            rewardsEl.current.innerText = innerText.substring(0, config.BODY_LIMIT) + '...';\r\n        }\r\n    });\r\n\r\n    const renderExpiryNotice = (dateString) => {\r\n        let daysDiff = common.daysDiff(dateString);\r\n\r\n        if (daysDiff >= 0 && daysDiff <= config.EXPIRY_LIMIT) {\r\n            return (\r\n                <div><b>{labels.EXPIRES_IN + ' ' + daysDiff + ' ' + labels.DAYS}</b></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderExpiry = (dateString) => {\r\n        return (\r\n            <>\r\n                {renderExpiryNotice(dateString)}\r\n                <span>{labels.EXPIRES_ON + ' ' + common.parseDateString(dateString)}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container fluid className='RewardsCard'>\r\n            <Row className='flex-row'>\r\n                <Col xs={12} sm={3} className='align-self-center'>\r\n                    <Image src={image_url} alt={image_url} className='logo' />\r\n                </Col>\r\n                <Col className='pt-5 pb-2'>\r\n                    <h4>{heading}</h4>\r\n                    <div className='expiry-tag'>\r\n                        {renderExpiry(rewards.usage_end_date)}\r\n                    </div>\r\n                    <p className='details' ref={rewardsEl} dangerouslySetInnerHTML={{ __html: body }}></p>\r\n                    <div className='expiry-tag-inline'>\r\n                        {renderExpiry(rewards.usage_end_date)}\r\n                    </div>\r\n                    <Button block className='view-button' onClick={() => onClick(rewards)}>\r\n                        {labels.DETAILS}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RewardsCard;\r\n\r\nRewardsCard.propTypes = {\r\n    rewards: PropTypes.object.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Image } from 'react-bootstrap';\r\nimport './styles.scss';\r\n\r\nimport { config, labels } from 'main/constants';\r\nimport { common } from 'main/services';\r\n\r\nconst RewardsModal = ({ rewards, onClose }) => {\r\n\r\n    const renderExpiryNotice = (dateString) => {\r\n        let daysDiff = common.daysDiff(dateString);\r\n\r\n        if (daysDiff >= 0 && daysDiff <= config.EXPIRY_LIMIT) {\r\n            return (\r\n                <p><b>{labels.EXPIRES_IN + ' ' + daysDiff + ' ' + labels.DAYS}</b></p>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {rewards && (\r\n                <Modal\r\n                    show={rewards ? true : false}\r\n                    onHide={() => onClose()}\r\n                    centered\r\n                    dialogClassName='RewardsModal'>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{rewards.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Image src={rewards.image_url} alt={rewards.image_url} className='logo' />\r\n                        <h4 className='text-secondary pt-3 pb-1'>{rewards.heading}</h4>\r\n                        {renderExpiryNotice(rewards.usage_end_date)}\r\n                        <p>{labels.EXPIRES_ON + ' ' + common.parseDateString(rewards.usage_end_date)}</p>\r\n                        <p dangerouslySetInnerHTML={{ __html: rewards.body }} />\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RewardsModal;\r\n\r\nRewardsModal.propTypes = {\r\n    rewards: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport './styles.scss';\r\n\r\nimport { labels } from 'main/constants';\r\n\r\nconst SearchInput = (props) => {\r\n    const { placeholder = labels.SEARCH, onSearch } = props;\r\n    const searchEl = useRef(null);\r\n\r\n    return (\r\n        <InputGroup className='SearchInput'>\r\n            <FormControl\r\n                ref={searchEl}\r\n                placeholder={placeholder}\r\n                onKeyPress={event => {\r\n                    if (event.key === \"Enter\") {\r\n                        onSearch(searchEl.current.value);\r\n                    }\r\n                }}\r\n            />\r\n            <InputGroup.Append>\r\n                <Button onClick={() => onSearch(searchEl.current.value)}>\r\n                    <FaSearch />\r\n                </Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n    );\r\n};\r\n\r\nexport default SearchInput;\r\n\r\nSearchInput.propTypes = {\r\n    placeholder: PropTypes.string,\r\n    onSearch: PropTypes.func.isRequired\r\n\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles.scss';\r\n\r\nimport Header from './../components/Header';\r\nimport RewardsCard from './../components/RewardsCard';\r\nimport RewardsModal from './../components/RewardsModal';\r\nimport SearchInput from '../components/SearchInput';\r\nimport { labels, regexp } from '../../constants';\r\nimport { common, RewardsService } from './../../services';\r\n\r\nconst Rewards = () => {\r\n    const [rewardsList, setRewardsList] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [activeRewards, setActiveRewards] = useState();\r\n\r\n    useEffect(() => {\r\n        RewardsService.getRewards()\r\n        .then((res) => {\r\n            const { data } = res;\r\n\r\n            if (search.length > 0) {\r\n                let newRewardsList = [];\r\n                let searchList = search.split(regexp.SPACE);\r\n    \r\n                data.forEach((item) => {\r\n                    let hasMatch = true;\r\n\r\n                    searchList.forEach((search) => {\r\n                        search = search.toLowerCase();\r\n                        \r\n                        hasMatch = hasMatch && (\r\n                            common.parseHtml(item.heading).toLowerCase().includes(search) || \r\n                            common.parseHtml(item.body).toLowerCase().includes(search)\r\n                            );\r\n                    });\r\n    \r\n                    if (hasMatch) newRewardsList.push(item);\r\n                });\r\n    \r\n                setRewardsList(newRewardsList);\r\n            } else {\r\n                setRewardsList(data);\r\n            }\r\n\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n\r\n    }, [search]);\r\n\r\n    const renderRewards = () => {\r\n        let rewardsEl = [];\r\n\r\n        rewardsList.forEach((reward, index) => {\r\n            rewardsEl.push(<RewardsCard key={index} rewards={reward} onClick={setActiveRewards} />);\r\n        });\r\n\r\n        return rewardsEl;\r\n    };\r\n\r\n    return (\r\n        <div className='Rewards'>\r\n            <Header title={labels.REWARDS_TITLE} />\r\n            <div className='content'>\r\n                <SearchInput placeholder={labels.SEARCH_REWARDS} onSearch={setSearch} />\r\n                {renderRewards()}\r\n            </div>\r\n            <RewardsModal rewards={activeRewards} onClose={() => setActiveRewards(undefined)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rewards;\r\n","import React from 'react';\r\n\r\nimport './App.scss';\r\nimport './styles/custom-bootstrap.scss';\r\n\r\nimport Rewards from './pages/Rewards';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='App'>\r\n            <Rewards />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './main/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}